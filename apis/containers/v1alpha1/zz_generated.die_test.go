//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2025 the original author or authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by diegen. DO NOT EDIT.

package v1alpha1

import (
	testingx "testing"

	testing "reconciler.io/dies/testing"
)

func TestCronTriggerSpecDie_MissingMethods(t *testingx.T) {
	die := CronTriggerSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CronTriggerSpecDie: %s", diff.List())
	}
}

func TestCronTriggerStatusDie_MissingMethods(t *testingx.T) {
	die := CronTriggerStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CronTriggerStatusDie: %s", diff.List())
	}
}

func TestCronTriggerDie_MissingMethods(t *testingx.T) {
	die := CronTriggerBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for CronTriggerDie: %s", diff.List())
	}
}

func TestGenericContainerSpecDie_MissingMethods(t *testingx.T) {
	die := GenericContainerSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for GenericContainerSpecDie: %s", diff.List())
	}
}

func TestHostCapabilitiesDie_MissingMethods(t *testingx.T) {
	die := HostCapabilitiesBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HostCapabilitiesDie: %s", diff.List())
	}
}

func TestHostEnvDie_MissingMethods(t *testingx.T) {
	die := HostEnvBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HostEnvDie: %s", diff.List())
	}
}

func TestHostEnvVarDie_MissingMethods(t *testingx.T) {
	die := HostEnvVarBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HostEnvVarDie: %s", diff.List())
	}
}

func TestHostConfigDie_MissingMethods(t *testingx.T) {
	die := HostConfigBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HostConfigDie: %s", diff.List())
	}
}

func TestHostConfigVarDie_MissingMethods(t *testingx.T) {
	die := HostConfigVarBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HostConfigVarDie: %s", diff.List())
	}
}

func TestHostNetworkDie_MissingMethods(t *testingx.T) {
	die := HostNetworkBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HostNetworkDie: %s", diff.List())
	}
}

func TestGenericContainerStatusDie_MissingMethods(t *testingx.T) {
	die := GenericContainerStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for GenericContainerStatusDie: %s", diff.List())
	}
}

func TestWITDie_MissingMethods(t *testingx.T) {
	die := WITBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for WITDie: %s", diff.List())
	}
}

func TestContainerDuckSpecDie_MissingMethods(t *testingx.T) {
	die := ContainerDuckSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ContainerDuckSpecDie: %s", diff.List())
	}
}

func TestContainerDuckStatusDie_MissingMethods(t *testingx.T) {
	die := ContainerDuckStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ContainerDuckStatusDie: %s", diff.List())
	}
}

func TestContainerDuckDie_MissingMethods(t *testingx.T) {
	die := ContainerDuckBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for ContainerDuckDie: %s", diff.List())
	}
}

func TestHttpTriggerSpecDie_MissingMethods(t *testingx.T) {
	die := HttpTriggerSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HttpTriggerSpecDie: %s", diff.List())
	}
}

func TestHttpTriggerStatusDie_MissingMethods(t *testingx.T) {
	die := HttpTriggerStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HttpTriggerStatusDie: %s", diff.List())
	}
}

func TestHttpTriggerDie_MissingMethods(t *testingx.T) {
	die := HttpTriggerBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for HttpTriggerDie: %s", diff.List())
	}
}

func TestWasmtimeContainerSpecDie_MissingMethods(t *testingx.T) {
	die := WasmtimeContainerSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for WasmtimeContainerSpecDie: %s", diff.List())
	}
}

func TestWasmtimeContainerStatusDie_MissingMethods(t *testingx.T) {
	die := WasmtimeContainerStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for WasmtimeContainerStatusDie: %s", diff.List())
	}
}

func TestWasmtimeContainerDie_MissingMethods(t *testingx.T) {
	die := WasmtimeContainerBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for WasmtimeContainerDie: %s", diff.List())
	}
}

func TestWrpcTriggerSpecDie_MissingMethods(t *testingx.T) {
	die := WrpcTriggerSpecBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for WrpcTriggerSpecDie: %s", diff.List())
	}
}

func TestWrpcTriggerStatusDie_MissingMethods(t *testingx.T) {
	die := WrpcTriggerStatusBlank
	ignore := []string{}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for WrpcTriggerStatusDie: %s", diff.List())
	}
}

func TestWrpcTriggerDie_MissingMethods(t *testingx.T) {
	die := WrpcTriggerBlank
	ignore := []string{"TypeMeta", "ObjectMeta"}
	diff := testing.DieFieldDiff(die).Delete(ignore...)
	if diff.Len() != 0 {
		t.Errorf("found missing fields for WrpcTriggerDie: %s", diff.List())
	}
}
