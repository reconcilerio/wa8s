name: CI

on:
  push: 
    branches:
    - main
    tags:
    - 'v[0-9]+\.[0-9]+\.[0-9]+-?**'
  pull_request: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
    - name: Install cargo binstall
      uses: cargo-bins/cargo-binstall@main
    - name: Install cargo component
      run: cargo binstall --force cargo-component
    - name: Install wasm-tools
      run: cargo binstall --force wasm-tools
    - name: Build
      run: ./build.sh
    - name: Collect artifacts.tar
      run: tar -cvf ../artifacts.tar *
      working-directory: ./lib
    - name: Upload artifacts.tar
      uses: actions/upload-artifact@v4
      with:
        name: artifacts.tar
        path: artifacts.tar
        retention-days: 7

  build-cli:
    if: startsWith(github.ref, 'refs/tags/')
    name: Build CLI
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - target: aarch64-unknown-linux-musl
          os: ubuntu-latest
        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest
        - target: aarch64-apple-darwin
          os: macos-latest
        - target: x86_64-apple-darwin
          os: macos-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        target: ${{ matrix.target }}
    - name: Install cargo binstall
      uses: cargo-bins/cargo-binstall@main
    - name: Install cross
      run: cargo binstall --force cross
    - name: Download artifacts.tar
      uses: actions/download-artifact@v4
      with:
        name: artifacts.tar
    - name: Extract artifacts
      run: tar -xvf artifacts.tar -C lib
    - name: Build with cross
      if: matrix.target == 'aarch64-unknown-linux-musl'
      run: |
        cross build --release --target ${{ matrix.target }}
        mv target/${{ matrix.target }}/release/static-config lib/static-config-${{ matrix.target }}
    - name: Build with cargo
      if: matrix.target != 'aarch64-unknown-linux-musl'
      run: |
        cargo build --release --target ${{ matrix.target }}
        mv target/${{ matrix.target }}/release/static-config lib/static-config-${{ matrix.target }}
    - name: Upload CLI
      uses: actions/upload-artifact@v4
      with:
        name: static-config-${{ matrix.target }}
        path: lib/static-config-${{ matrix.target }}
        retention-days: 7

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build-cli
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
    - name: Install cargo binstall
      uses: cargo-bins/cargo-binstall@main
    - name: Install wkg
      run: cargo binstall --force wkg
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Download artifacts.tar
      uses: actions/download-artifact@v4
      with:
        name: artifacts.tar
    - name: Extract artifacts
      run: tar -xvf artifacts.tar -C lib
    - name: Download CLIs
      uses: actions/download-artifact@v4
      with:
        pattern: static-config-*
        path: ./lib/
        merge-multiple: true
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish factory to gchr.io
      run: ./publish.sh "ghcr.io/${{ github.repository }}" "${{ steps.get_version.outputs.VERSION }}"
    - name: Draft GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        draft: true
        files: |
          lib/factory.wasm
          lib/static-config-*
        fail_on_unmatched_files: true
        token: ${{ secrets.GITHUB_TOKEN }}
